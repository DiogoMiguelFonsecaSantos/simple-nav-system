

#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "mpu9250.h"
#include "led.h"
#include "pin.h"
#include "driver/gpio.h"
#include "esp_log.h"
#include "cJSON.h"
#include "http_server.h"
#include "esp_system.h"
#include "esp_err.h"
#include "esp_log.h"

#define LED_RED 26
#define LED_YELLOW 27
#define LED_GREEN 14
#define LED_BLUE 12

void configLEDS(void)
{
    gpio_reset_pin(LED_RED);
    gpio_reset_pin(LED_YELLOW);
    gpio_reset_pin(LED_GREEN);
    gpio_reset_pin(LED_BLUE);

    PIN_SetDirection(LED_RED, OUTPUT);
    PIN_SetDirection(LED_YELLOW, OUTPUT);
    PIN_SetDirection(LED_GREEN, OUTPUT);
    PIN_SetDirection(LED_BLUE, OUTPUT);
}

void internalBlink(void *pvParameters)
{   
	LED_Off();
    while (true) {
        LED_Toggle();
        vTaskDelay(100 / portTICK_PERIOD_MS);
    }
}

void daPolice(void *pvParameters){
	
	while(1){
		
        PIN_Set(LED_RED);
        vTaskDelay(100 / portTICK_PERIOD_MS);
        PIN_Clear(LED_RED);
        PIN_Set(LED_BLUE);
        vTaskDelay(100 / portTICK_PERIOD_MS);
        PIN_Clear(LED_BLUE);
	}
	
}

void app_main(void)
{

    LED_Init(false);
	configLEDS();
	
    // Initialize the MPU-9250
    esp_err_t ret = MPU9250Init();
    if (ret != ESP_OK) {
        printf("Failed to initialize MPU-9250: %d\n", ret);
        return;
    }

    if (MPU9250InitMagnetometer() != ESP_OK) {
        ESP_LOGE("MAIN", "Failed to initialize magnetometer");
        return;
    }

    printf("MPU-9250 initialized successfully.\n");

     // Start the web server
     httpd_handle_t server = start_web_server();
     if (server == NULL) {
         ESP_LOGE("MAIN", "Failed to start web server");
         return;
     }

    // Variables to store sensor data
    int16_t accel_x, accel_y, accel_z;
    int16_t gyro_x, gyro_y, gyro_z;
    int16_t mag_x, mag_y,mag_z;

    xTaskCreate(&daPolice, "the police", 2048, NULL, 5, NULL);
    xTaskCreate(&internalBlink, "internalBlink", 2048, NULL, 5, NULL);

    while (1) {
        
        // Read accelerometer data
        esp_err_t retVal = MPU9250ReadAccelerometerRaw(&accel_x, &accel_y, &accel_z);
        if (retVal != ESP_OK) {
            printf("Failed to read accelerometer data: %d\n", retVal);
            continue;
        }
        // Read gyroscope data
        retVal = MPU9250ReadGyroscopeRaw(&gyro_x, &gyro_y, &gyro_z);
        if (retVal != ESP_OK) {
            printf("Failed to read gyroscope data: %d\n", retVal);
            continue;
        }
        // Read magnetometer data
        retVal = MPU9250ReadMagnetometerRaw(&mag_x, &mag_y, &mag_z);
        if (retVal != ESP_OK) {
            printf("Failed to read magnetometer data: %d\n", retVal);
            continue;
        }

        // Print sensor data
        printf("========================================================================\n");
        printf("Accelerometer: X=%d, Y=%d, Z=%d\n", accel_x, accel_y, accel_z);
        printf("Gyroscope: X=%d, Y=%d, Z=%d\n", gyro_x, gyro_y, gyro_z);
        printf("Magnetometer: X=%d, Y=%d, Z=%d\n", mag_x, mag_y, mag_z);
        printf("========================================================================\n");

        // Delay for a while before reading again
        vTaskDelay(1000 / portTICK_PERIOD_MS);
    }
}
